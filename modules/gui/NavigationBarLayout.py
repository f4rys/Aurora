from PyQt6.QtCore import Qt
from PyQt6.QtGui import QIcon
from PyQt6.QtWidgets import QSizePolicy, QToolButton, QFrame, QVBoxLayout, QButtonGroup

from modules.dictionaries.loader import load_dictionary


class NavigationBarLayout(QVBoxLayout):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.setProperty("class", "navigation_bar")
        self.setContentsMargins(10, 10, 0, 10)

        self.dictionary = load_dictionary()

        self.button_group = QButtonGroup()

        self.devices_button = QToolButton()
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.devices_button.sizePolicy().hasHeightForWidth())
        self.devices_button.setSizePolicy(sizePolicy)
        self.devices_button.setFocusPolicy(Qt.FocusPolicy.TabFocus)
        self.devices_button.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.devices_button.setIcon(QIcon(":/navigation/devices.png"))
        self.devices_button.setProperty("class", "tab_button")
        self.devices_button.setText(self.dictionary["devices"])
        self.devices_button.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.devices_button.setArrowType(Qt.ArrowType.NoArrow)
        self.devices_button.setCheckable(True)
        self.button_group.addButton(self.devices_button)
        self.addWidget(self.devices_button)

        self.line = QFrame()
        self.line.setFrameShape(QFrame.Shape.HLine)
        self.line.setFrameShadow(QFrame.Shadow.Sunken)
        self.addWidget(self.line)

        self.schedules_button = QToolButton()
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.schedules_button.sizePolicy().hasHeightForWidth())
        self.schedules_button.setSizePolicy(sizePolicy)
        self.schedules_button.setFocusPolicy(Qt.FocusPolicy.TabFocus)
        self.schedules_button.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.schedules_button.setIcon(QIcon(":/navigation/schedules.png"))
        self.schedules_button.setProperty("class", "tab_button")
        self.schedules_button.setText(self.dictionary["schedules"])
        self.schedules_button.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.schedules_button.setArrowType(Qt.ArrowType.NoArrow)
        self.schedules_button.setCheckable(True)
        self.button_group.addButton(self.schedules_button)
        self.addWidget(self.schedules_button)

        self.line_2 = QFrame()
        self.line_2.setFrameShape(QFrame.Shape.HLine)
        self.line_2.setFrameShadow(QFrame.Shadow.Sunken)
        self.addWidget(self.line_2)

        self.analytics_button = QToolButton()
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.analytics_button.sizePolicy().hasHeightForWidth())
        self.analytics_button.setSizePolicy(sizePolicy)
        self.analytics_button.setFocusPolicy(Qt.FocusPolicy.TabFocus)
        self.analytics_button.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.analytics_button.setIcon(QIcon(":/navigation/analytics.png"))
        self.analytics_button.setProperty("class", "tab_button")
        self.analytics_button.setText(self.dictionary["analytics"])
        self.analytics_button.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.analytics_button.setArrowType(Qt.ArrowType.NoArrow)
        self.analytics_button.setCheckable(True)
        self.button_group.addButton(self.analytics_button)
        self.addWidget(self.analytics_button)

        self.line_3 = QFrame()
        self.line_3.setFrameShape(QFrame.Shape.HLine)
        self.line_3.setFrameShadow(QFrame.Shadow.Sunken)
        self.addWidget(self.line_3)

        self.smart_mode_button = QToolButton()
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.smart_mode_button.sizePolicy().hasHeightForWidth())
        self.smart_mode_button.setSizePolicy(sizePolicy)
        self.smart_mode_button.setFocusPolicy(Qt.FocusPolicy.TabFocus)
        self.smart_mode_button.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.smart_mode_button.setIcon(QIcon(":/navigation/smart_mode.png"))
        self.smart_mode_button.setProperty("class", "tab_button")
        self.smart_mode_button.setText(self.dictionary["smart_mode"])
        self.smart_mode_button.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.smart_mode_button.setArrowType(Qt.ArrowType.NoArrow)
        self.smart_mode_button.setCheckable(True)
        self.button_group.addButton(self.smart_mode_button)
        self.addWidget(self.smart_mode_button)

        self.line_4 = QFrame()
        self.line_4.setFrameShape(QFrame.Shape.HLine)
        self.line_4.setFrameShadow(QFrame.Shadow.Sunken)
        self.addWidget(self.line_4)

        self.help_button = QToolButton()
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.schedules_button.sizePolicy().hasHeightForWidth())
        self.help_button.setSizePolicy(sizePolicy)
        self.help_button.setFocusPolicy(Qt.FocusPolicy.TabFocus)
        self.help_button.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.help_button.setIcon(QIcon(":/navigation/help.png"))
        self.help_button.setProperty("class", "tab_button")
        self.help_button.setText(self.dictionary["help"])
        self.help_button.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.help_button.setArrowType(Qt.ArrowType.NoArrow)
        self.help_button.setCheckable(True)
        self.button_group.addButton(self.help_button)
        self.addWidget(self.help_button)
